#### Khawaja Abdul Hafeez - Task 2 ####

---
  - name: Setting up DevOps user with Docker and Jenkins
    gather_facts: No
    hosts: localhost #use local host
    become_user: root #login as the root user 
    become: yes
    tasks:

      - name: Create a user
        user:
          name: devops
          password: '1b4021b5ad625f8feae07ce39d77c7d6f011a73c753bb74b99f3b98fa0c8fc5d' #SHA256 for 'a1s2d3f4g5'

      - name: Install "bzip2" ,"git", "wget", "openssl-devel", "apache"
        yum:
          name:
            - bzip2
            - git 
            - wget
            - openssl-devel
            - httpd 
            - firewalld 
          state: latest

      - name: Install yum utils # Necessary and required package Installation for Docker
        yum:
          name: yum-utils
          state: latest

      - name: Install device-mapper-persistent-data # Necessary and required package Installation for Docker
        yum:
          name: device-mapper-persistent-data
          state: latest

      - name: Install lvm2 # Necessary and required package Installation for Docker
        yum:
          name: lvm2
          state: latest

      - name: Add Docker repo
        get_url:
          url: https://download.docker.com/linux/centos/docker-ce.repo
          dest: /etc/yum.repos.d/docer-ce.repo
        become: yes

      - name: Enable Docker Edge repo
        ini_file:
          dest: /etc/yum.repos.d/docer-ce.repo
          section: 'docker-ce-edge'
          option: enabled
          value: 0
        become: yes

      - name: Enable Docker Test repo
        ini_file:
          dest: /etc/yum.repos.d/docer-ce.repo
          section: 'docker-ce-test'
          option: enabled
          value: 0
        become: yes

      - name: Install Docker
        package:
          name: docker-ce #community edition
          state: latest
        become: yes

      - name: Start Docker service
        service:
          name: docker
          state: started
          enabled: yes
        become: yes

      - name: Download and install Docker Compose
        get_url:
          url: https://github.com/docker/compose/releases/download/1.25.0-rc4/docker-compose-Linux-x86_64
          dest: /usr/bin/docker-compose
          mode: 0755
        when:
          - docker_compose_check.msg is defined
          - docker_compose_check.msg.find('No such file or directory') != -1

      - name: Add user Devops to docker group #After successfull installation of Docker will Add user to docker group
        user:
          name: devops
          groups: docker
          append: yes
        become: yes

      #Jenkins Installation:
      - name: Install yum
        yum:
          name:
            - wget
            - java-1.8.0-openjdk #JDK is required for Jenkins

      - name: Download jenkins.repo
        get_url:
          url: http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo #Jenkins repository
          dest: /etc/yum.repos.d/jenkins.repo

      - name: Import Jenkins Key
        rpm_key:
          state: present
          key: https://jenkins-ci.org/redhat/jenkins-ci.org.key

      - name: Install Jenkins
        yum:
          name: jenkins
          state: present

      - name: Start & Enable Jenkins
        systemd:  #command to start/stop a service
          name: jenkins
          state: started
          enabled: true

       - name: Open Firewall Port # Open port 8080 for accessing and setting up jenkins server
         firewalld:
           zone: public
           port: 8080/tcp
           permanent: true
           state: enabled
           immediate: true

      - name: Get init password Jenkins
        shell: cat /var/lib/jenkins/secrets/initialAdminPassword  #one-time initial password for Jenkins setup
        changed_when: false
        register: result

      - name: Print init password Jenkins #Printing the password on console for easy setup
        debug:
          var: result.stdout